function res = tennisball_flows(~, Q)
    %CONSTANTS
    density_air = 1.225; %kg/m^3
    
    area = 0.0335; %m^2 (cross-sectional area of ball; ...
    %"how much air do I have to push out of the way?")
    
    mass_ball = 0.0585; %kg
    gravity = 9.8; %m/s^2
   
    x = Q(1);
    y = Q(2);
    vx = Q(3);
    vy = Q(4);

    rpm = Q(5);
    %drag & lift coefficient depends on RPM * velocity
    velocity = sqrt(vx^2 + vy^2);   
    
    radius = 0.034; %m
    omega = rpm * 2*pi / 60; %rad/s 
    S = radius * omega / velocity; %unitless
    
    
    drag_coef = 0.507;
    lift_coef = 0.5917*S;
    
    %DIFFERENTIAL EQUATIONS
    deriv_x = vx;
    deriv_y = vy;
    deriv_rpm = 0;
    %X-component(acceleration)
    drag_x = (-0.5 * density_air * drag_coef * area)... 
        * (vx^2 + vy^2) * vx / (sqrt(vx^2 + vy^2));
    lift_x = (0.5 * density_air * lift_coef * area)... 
        * (vx^2 + vy^2) * vy / (sqrt(vx^2 + vy^2));
    
    deriv_vx = (drag_x + lift_x)/mass_ball;
    
    %Y-component(acclearation)
    gravity_y = -mass_ball * gravity;
    drag_y = -((0.5 * density_air * drag_coef * area * ...
        (vx^2 + vy^2) * vy / (sqrt(vx^2 + vy^2))));
    lift_y = -((0.5 * density_air * lift_coef * area * ...
        (vx^2 + vy^2) * vx / (sqrt(vx^2 + vy^2))));
    
    deriv_vy = (gravity_y + drag_y + lift_y)/mass_ball; 
    
    res = [deriv_x ; deriv_y ; deriv_vx ; deriv_vy; deriv_rpm];
end